name: build and release
on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  CLI_NAME: peek
  ENTRY_POINT: peek.py

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
        
      - name: Install Pillow
        run: pip install Pillow

      - name: Install Nuitka
        run: pip install nuitka

      - name: Compile with Nuitka
        shell: bash
        run: |
          python -m nuitka peek.py \
            --standalone \
            --onefile \
            --enable-plugin=pyqt5 \
            --output-dir=dist

            ${{ env.ENTRY_POINT }}

      - name: Package Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby ruby-dev build-essential
          sudo gem install --no-document fpm

          mv dist/${{ env.CLI_NAME }} dist/${{ env.CLI_NAME }}.bin
          chmod +x dist/${{ env.CLI_NAME }}.bin
          tar czf peek-linux.tar.gz -C dist $(basename ${{ env.CLI_NAME }}.bin)

          fpm -s dir \
              -t deb \
              -n ${{ env.CLI_NAME }} \
              -v "${{ github.ref_name }}" \
              --prefix /usr/local/bin \
              dist/${{ env.CLI_NAME }}.bin

      - name: Package Windows
        if: matrix.os == 'windows-latest'
        run: |
          mv dist\\${{ env.CLI_NAME }}.exe dist\\${{ env.CLI_NAME }}-win.exe
          powershell -Command "Compress-Archive -Path dist\\${{ env.CLI_NAME }}-win.exe -DestinationPath peek-windows.zip"

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          files: |
            peek-linux.tar.gz
            peek-windows.zip
            peek_*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
